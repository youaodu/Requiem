name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  # 创建 GitHub Release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Requiem ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

  # Linux 构建和发布
  build-linux:
    name: Build and Release (Linux)
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libfontconfig1-dev \
            libfreetype6-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libxkbcommon-dev \
            libssl-dev

      - name: Build release
        run: cargo build --release

      - name: Strip binary
        run: strip target/release/requiem

      - name: Create tarball
        run: |
          cd target/release
          tar czf requiem-${{ needs.create-release.outputs.version }}-linux-x86_64.tar.gz requiem
          cd ../..

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/requiem-${{ needs.create-release.outputs.version }}-linux-x86_64.tar.gz
          asset_name: requiem-${{ needs.create-release.outputs.version }}-linux-x86_64.tar.gz
          asset_content_type: application/gzip

  # Windows 构建和发布
  build-windows:
    name: Build and Release (Windows)
    runs-on: windows-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release

      - name: Create zip
        run: |
          cd target/release
          Compress-Archive -Path requiem.exe -DestinationPath requiem-${{ needs.create-release.outputs.version }}-windows-x86_64.zip
          cd ../..

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/requiem-${{ needs.create-release.outputs.version }}-windows-x86_64.zip
          asset_name: requiem-${{ needs.create-release.outputs.version }}-windows-x86_64.zip
          asset_content_type: application/zip

  # macOS 构建和发布
  build-macos:
    name: Build and Release (macOS)
    runs-on: macos-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release

      - name: Strip binary
        run: strip target/release/requiem

      - name: Create tarball
        run: |
          cd target/release
          tar czf requiem-${{ needs.create-release.outputs.version }}-macos-x86_64.tar.gz requiem
          cd ../..

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/requiem-${{ needs.create-release.outputs.version }}-macos-x86_64.tar.gz
          asset_name: requiem-${{ needs.create-release.outputs.version }}-macos-x86_64.tar.gz
          asset_content_type: application/gzip

  # 发布到 crates.io (可选)
  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: create-release
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libfontconfig1-dev \
            libfreetype6-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libxkbcommon-dev \
            libssl-dev

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true
